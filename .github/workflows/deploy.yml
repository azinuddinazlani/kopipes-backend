# name: Deploy

# on:
#   push:
#     branches:
#       - main

# env:
#   PROJECT_ID: gaia-capstone04-prd
#   GAR_LOCATION: asia-southeast1
#   REPOSITORY: cloud-run-source-deploy
#   SERVICE: kopipes-backend
#   REGION: asia-southeast1

# jobs:
#   build_and_preview:
#     permissions:
#       contents: "read"
#       id-token: "write"

#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v4

#       - name: Google Auth
#         id: auth
#         uses: "google-github-actions/auth@v2"
#         with:
#           credentials_json: "${{ secrets.CLOUDRUN_SERVICE_ACCOUNT }}"
#           token_format: "access_token"

#       # Authenticate Docker to Google Cloud Artifact Registry
#       - name: Docker Auth
#         id: docker-auth
#         uses: "docker/login-action@v1"
#         with:
#           username: "oauth2accesstoken"
#           password: "${{ steps.auth.outputs.access_token }}"
#           registry: "${{ env.GAR_LOCATION }}-docker.pkg.dev"

#       - name: Build and Push Container
#         run: |-
#           docker build -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}" ./
#           docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}"
#       - name: Deploy to Cloud Run
#         id: deploy
#         uses: "google-github-actions/deploy-cloudrun@v2"
#         with:
#           service: ${{ env.SERVICE }}
#           region: ${{ env.REGION }}
#           image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}
#           flags: "--allow-unauthenticated --set-cloudsql-instances=${{ vars.CLOUD_SQL_INSTANCE }}"
#           env_vars: |
#             DB_USER=${{ vars.DB_USER }}
#             DB_PASS=${{ secrets.DB_PASS }}
#             DB_NAME=${{ vars.DB_NAME }}
#             CLOUD_SQL_INSTANCE=${{ vars.CLOUD_SQL_INSTANCE }}
#             GOOGLE_API_KEY=${{ secrets.GOOGLE_API_KEY }}
#             MONGODB_ATLAS_CLUSTER_URI=${{ secrets.MONGODB_ATLAS_CLUSTER_URI }}

# Connect to supabase

name: Deploy to Supabase

on:
  push:
    branches:
      - azin

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/kopipes-backend:latest

      # If you're using Supabase Functions
      - name: Set up Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Deploy to Supabase
        run: |
          supabase login --access-token ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          supabase functions deploy --project-ref ${{ secrets.SUPABASE_PROJECT_ID }}
        env:
          SUPABASE_DB_USER: ${{ vars.SUPABASE_DB_USER }}
          SUPABASE_DB_PASS: ${{ vars.SUPABASE_DB_PASS }}
          SUPABASE_DB_NAME: ${{ vars.SUPABASE_DB_NAME }}
          SUPABASE_DB_HOST: ${{ secrets.SUPABASE_DB_HOST }}
          SUPABASE_DB_PORT: ${{ secrets.SUPABASE_DB_PORT }}
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
          MONGODB_ATLAS_CLUSTER_URI: ${{ secrets.MONGODB_ATLAS_CLUSTER_URI }}